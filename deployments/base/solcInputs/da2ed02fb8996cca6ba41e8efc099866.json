{
  "language": "Solidity",
  "sources": {
    "contracts/helper/VaultHelper.sol": {
      "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.24;\r\ninterface IVault {\r\n    function deposit(\r\n        uint256 assets,\r\n        address receiver\r\n    ) external returns (uint256);\r\n}\r\ninterface IERC20 {\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n    function approve(address spender, uint256 amount) external returns (bool);   \r\n}\r\ncontract VaultHelper {\r\n    function depositERC20(\r\n        address token,\r\n        address vault, \r\n        uint256 amount,\r\n        address receiver\r\n    ) external {\r\n        require(IERC20(token).transferFrom(msg.sender, address(this), amount), \"Transfer token failed\");\r\n        require(IERC20(token).approve(vault, amount), \"Approve token failed\");\r\n        IVault(vault).deposit(amount, receiver);\r\n    }\r\n}"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "viaIR": true,
    "evmVersion": "paris",
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}